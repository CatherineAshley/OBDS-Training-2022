file.symlink/"Users/Administrator/Git/Statistics/template.Rdm"
file.symlink/"Users/Administrator/Git/Statistics/template.Rmd"
file.symlink/"Users/Administrator/Git/Statistics/template.Rmd", " template.Rmd"
file.symlink(/"Users/Administrator/Git/Statistics/template.Rmd", " template.Rmd")
file.symlink("/Users/Administrator/Git/Statistics/template.Rmd", " template.Rmd")
file.symlink("/Users/Administrator/Git/Statistics/week 2/template.Rmd", " template.Rmd")
file.symlink("/Users/Administrator/Git/Statistics/week 2/template.Rmd", " template.Rmd")
file.symlink("/Users/Administrator/Git/Statistics/template.Rmd", " template.Rmd")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
set.seed(1)
x <-rnorm (n=1000, mean = 10, sd = 5)
mean(x)
summary(x)
sd(x)
quantile (x, probs= seq(0.1, .1))
quantile (x, probs = seq(0,1, .1))
hist(x)
hist(x, breaks=20)
hist(x, breaks=20)
abline(v = mean(x))
hist(x, breaks=20)
abline(v = mean(x), col = "red")
?abline
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
abline(v=mean(x) - sd(x), col= "blue")
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
abline(v=mean(x) - sd(x), col= "blue")
abline(v=mean(x) + sd(x), col= "blue")
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
abline(v=mean(x) - sd(x), col= "blue")
abline(v=mean(x) + sd(x), col= "blue")
abline(v=median(x) - mad(x), col= "blue", lty = dashed)
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
abline(v=mean(x) - sd(x), col= "blue")
abline(v=mean(x) + sd(x), col= "blue")
abline(v=median(x) - mad(x), col= "blue", lty = dashed)
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
abline(v=mean(x) - sd(x), col= "blue")
abline(v=mean(x) + sd(x), col= "blue")
abline(v=median(x) - mad(x), col= "blue", lty = "dashed")
abline(v=median(x) + mad(x), col= "blue", lty = "dashed")
set.seed(1)
z <- (1:1000000)
set.seed(1)
z <- (1:1000000)
hist(z)
set.seed(1)
z <- rnorn(n = 1000000, mean = 10, sd = 5)
set.seed(1)
z <- rnorm(n = 1000000, mean = 10, sd = 5)
hist(z)
set.seed(1)
z <- rnorm(n = 1000000, mean = 10, sd = 5)
hist(z, breaks=1000)
pnorm(seq(-5, 5, .1))
pnorm(seq(-5, 5, .1))
plot(seq(-5, 5, .1),pnorm(seq(-5, 5, .1))
##pnorm(seq(-5, 5, .1))
plot(seq(-5, 5, .1), pnorm(seq(-5, 5, .1))
##pnorm(seq(-5, 5, .1))
plot(seq(-5, 5, .1), pnorm(seq(-5, 5, .1)
##pnorm(seq(-5, 5, .1))
plot(seq(-5, 5, .1), pnorm(seq(-5, 5, .1)))
qnorm(p=seq(-1, 1, 0.01)))
qnorm(p=seq(1, 0.01))
qnorm(p=seq(0,1, 0,01))
qnorm(p=seq(0,1, 0.01))
##qnorm(p=seq(0,1, 0.01))
plot(seq(0,1, 0.01), qnorm(seq(0,1, 0.01)))
dnorm(seq(-5, 5, 0.1))
###dnorm(seq(-5, 5, 0.1))
plot(seq(-5, 5, 0.1),dnorm(seq(-5, 5, 0.1)))
pnorm(2)
pnorm(2)
1-pnorm(2)
pnorm(2)-pnorm(-2)
1-(pnorm(2)-pnorm(-2))
wilcox.test(x = 1:10, y = 5:14)
x <- c(1:10)
y <- c(5:14)
wilcox.test(x = 1:10, y = 5:14)
x <- c(1:10)
y <- c(5:14)
wilcox.test(x = 1:10, y = 5:14)
test.out <- wilcox.test(x, y)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
Print(Test_out)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
Print(test_out)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
Print(test_out)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
df <- read.csv("gene_exprs.csv")
file.symlink/"Users/Administrator/Git/Statistics/week 2/gene_exprs.csv
library(readr)
gene_exprs <- read_csv("gene_exprs.csv")
df <- read.csv("gene_exprs.csv")
library(readr)
gene_exprs <- read_csv("gene_exprs.csv")
View(gene_exprs)
df <- read.csv("gene_exprs.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
set.seed(1)
x <- rnorm(n = 100, mean = 2, sd = 5)
mean(x)
sd(x)
set.seed(1)
x <-rnorm (n=1000, mean = 10, sd = 5)
summary(x)
mean(x)
sd(x)
quantile (x, probs = seq(0,1, .1))
hist(x, breaks=20)
hist(x, breaks=20)
abline(v = mean(x), col = "red")
abline(v=median(x), col="red", lty=2)
abline(v=mean(x) - sd(x), col= "blue")
abline(v=mean(x) + sd(x), col= "blue")
abline(v=median(x) - mad(x), col= "blue", lty = "dashed")
abline(v=median(x) + mad(x), col= "blue", lty = "dashed")
set.seed(1)
z <- rnorm(n = 1000000, mean = 10, sd = 5)
hist(z, breaks=1000)
##pnorm(seq(-5, 5, .1))
plot(seq(-5, 5, .1), pnorm(seq(-5, 5, .1)))
##qnorm(p=seq(0,1, 0.01))
plot(seq(0,1, 0.01), qnorm(seq(0,1, 0.01)))
###dnorm(seq(-5, 5, 0.1))
plot(seq(-5, 5, 0.1),dnorm(seq(-5, 5, 0.1)) )
pnorm(2)
1-pnorm(2)
pnorm(2)-pnorm(-2)
1-(pnorm(2)-pnorm(-2))
ecdf_iris_sepal_length <- ecdf(iris$Sepal.Length)
ecdf_iris_sepal_length
ggplot(iris, aes(Sepal.Length)) +
geom_histogram(color = "black", fill = "grey") +
cowplot::theme_cowplot()
plot(ecdf_iris_sepal_length, cex = 0.5)
knots(ecdf_iris_sepal_length)
sort(unique(iris$Sepal.Length))
quantile(ecdf_iris_sepal_length, c(0, 0.25, 0.5, 0.75, 1))
quantile(iris$Sepal.Length, c(0, 0.25, 0.5, 0.75, 1))
?pairwise.t.test
help(pairwise.t.test)
set.seed(1)
x <- rnorm(n = 1000, mean = 0, sd = 1)
y <- rnorm(n = 1000, mean = 1, sd = 1)
test_data <- bind_rows(
tibble(group = "x", value = x),
tibble(group = "y", value = y)
)
ggplot(test_data, aes(value)) +
geom_histogram(fill = "grey", color = "black") +
facet_wrap(~group, ncol = 1) +
cowplot::theme_cowplot()
t.test(value ~ group, test_data)
t.test(x, y)
t.test(y, x)
set.seed(1)
x <- runif(n = 1000, min = 1, max = 11)
y <- runif(n = 1000, min = 3, max = 13)
test_data <- bind_rows(
tibble(group = "x", value = x),
tibble(group = "y", value = y)
)
gg <- ggplot(test_data, aes(value)) +
facet_wrap(~group, ncol = 1) +
geom_histogram(fill = "grey", color = "black") +
cowplot::theme_cowplot()
gg
wilcox.test(value ~ group, test_data)
wilcox.test(value ~ group, test_data, alternative = "less")
set.seed(1)
n_sample <- 10
x <- runif(n = n_sample, min = 10, max = 20)
y <- x + 2 + rnorm(n = n_sample, mean = 0, sd = 1)
test_data <- tibble(
sample = paste("sample", seq_len(n_sample)),
x = x,
y = y
) %>% pivot_longer(cols = c(x, y), names_to = "variable")
ggplot(test_data, aes(variable, value)) +
geom_line(aes(group = sample), size = 0.1) +
geom_point() +
cowplot::theme_cowplot()
t.test(x, y, paired = TRUE)
set.seed(1)
n_sample <- 1000
x1 <- rnorm(n = n_sample, mean = 10, sd = 2)
x2 <- x1 + 5 + rnorm(n = n_sample, mean = 0, sd = 1)
x3 <- x2 + 0 + rnorm(n = n_sample, mean = 0, sd = 0.5)
test_data <- bind_rows(
tibble(group = "x1", value = x1),
tibble(group = "x2", value = x2),
tibble(group = "x3", value = x3)
)
test_data <- bind_rows(
tibble(group = "x1", value = x1),
tibble(group = "x2", value = x2),
tibble(group = "x3", value = x3)
)
gg <- ggplot(test_data, aes(value)) +
facet_wrap(~group, ncol = 1) +
geom_histogram(fill = "grey", color = "black") +
cowplot::theme_cowplot()
gg
out <- aov(value ~ group, test_data)
out
summary(out)
set.seed(1)
test_data <- tibble(
x = rnorm(n = 50, mean = 0, sd = 1),
y = 10 + 2.5 * x + rnorm(n = 50, mean = 0, sd = 0.5))
ggplot(test_data, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method = "glm", se = FALSE) +
cowplot::theme_cowplot()
lm(y ~ x, test_data)
lm(y ~ x, test_data) %>% summary()
x_table <- matrix(data = c(12, 4, 3, 23),
nrow = 2,
dimnames = list(
c("DE","Not DE"),
c("in_pathway", "not_pathway")
))
knitr::kable(x_table)
fisher.test(x_table)
set.seed(1)
n_size <- 10E3
x <- runif(n = n_size, min = 1, max = 11)
y <- runif(n = n_size, min = 3, max = 13)
test_data <- bind_rows(
tibble(group = "x", value = x),
tibble(group = "y", value = y)
)
gg <- ggplot(test_data, aes(value)) +
facet_wrap(~group, ncol = 1) +
geom_histogram(fill = "grey", color = "black") +
cowplot::theme_cowplot()
gg
t.test(value ~ group, test_data)
x_mean <- 0
x_sd <- 20
data_table <- tibble(x = as.integer(rnorm(n = 10E3, mean = x_mean, sd = x_sd)))
summary_table <- bind_rows(
tibble(Value = "mean", value = mean(data_table$x)),
tibble(Value = "median", value = median(data_table$x)),
tibble(Value = "mode", value = as.integer(names(which.max(table(data_table$x)))))
)
data_table %>%
ggplot() +
geom_histogram(aes(x = x), color = "black", fill = "grey") +
geom_vline(aes(xintercept = value, color = Value), summary_table, size = 2, alpha = 0.3) +
cowplot::theme_cowplot()
x <- rnorm(n = 5000, mean = 0, sd = 1)
ggplot(tibble(x=x)) +
geom_histogram(aes(x), fill = "grey", color = "black", bins = 20) +
cowplot::theme_cowplot()
shapiro.test(x)
x <- 2^rnorm(n = 5000, mean = 0, sd = 1)
ggplot(tibble(x=x)) +
geom_histogram(aes(x), fill = "grey", color = "black", bins = 20) +
cowplot::theme_cowplot()
shapiro.test(x)
x <- rnorm(n = 5000, mean = 5, sd = 3)
qqnorm(x)
x <- 2^rnorm(n = 5000, mean = 0, sd = 1)
qqnorm(x)
set.seed(1)
n_tests <- 1000
compute_p_value <- function(dummy) {
x <- rnorm(n = 100, mean = 0, sd = 1)
y <- rnorm(n = 100, mean = 0, sd = 1)
out <- t.test(x, y)
out$p.value
}
result_table <- tibble(
pvalue = vapply(X = seq_len(n_tests), FUN = compute_p_value, FUN.VALUE = numeric(1)),
BH = p.adjust(p = pvalue, method = "BH"),
bonferroni = p.adjust(p = pvalue, method = "bonferroni")
)
data_table <- tibble(
x = rnorm(n = 100, mean = 0, sd = 1),
y = rnorm(n = 100, mean = 0, sd = 1)
) %>% pivot_longer(cols = c(x, y))
ggplot(data_table) +
geom_boxplot(aes(name, value)) +
geom_jitter(aes(name, value), width = 0.1)
ggplot(result_table) +
geom_histogram(aes(pvalue), fill = "grey", color = "black", breaks = seq(0, 1, 0.05)) +
scale_x_continuous(limits = c(0, 1)) +
labs(title = "Raw p-value")
cat(sprintf("There are %i out of %i raw p-values smaller than 0.05", sum(result_table$pvalue < 0.05), n_tests))
ggplot(result_table) +
geom_histogram(aes(BH), fill = "grey", color = "black", bins = 20) +
coord_cartesian(xlim = c(0, 1)) +
labs(title = "BH correction")
cat(sprintf("There are %i BH-corrected p-values smaller than 0.05", sum(result_table$BH < 0.05)))
ggplot(result_table) +
geom_histogram(aes(bonferroni), fill = "grey", color = "black", bins = 20) +
coord_cartesian(xlim = c(0, 1)) +
labs(title = "bonferroni correction")
cat(sprintf("There are %i bonferonni corrected p-values smaller than 0.05", sum(result_table$bonferroni < 0.05)))
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
Print(test_out)
t.test(gene_exprs~group, df)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
Print(test_out)
x <- c(1:10)
y <- c(5:14)
test_out <- wilcox.test(x, y)
file.symlink("/Users/Administrator/Git/Statistics/week 2/GSE111543.xlsx", " GSE111543.xlsx")
file.symlink("/Users/Administrator/Git/Statistics/week 2/GSE111543.xlsx", " GSE111543.xlsx")
file.symlink("/Users/Administrator/Git/Statistics/gene_exprs.csv", "gene_exprs.csv")
logcounts_matrix <- read_excel("GSE111543.xlsx)
dim(logcounts_matrix)
logcounts_matrix <- read_excel("GSE111543.xlsx, sheet = "logcounts)
logcounts_matrix <- read_excel("GSE111543.xlsx, sheet = "logcounts")
logcounts_matrix <- read_excel("GSE111543.xlsx", sheet = "logcounts")
setwd("C:/Users/Administrator/Git/Statistics/week 2")
logcounts_matrix <- read_excel("GSE111543.xlsx", sheet = "logcounts")
logcounts_matrix <- read_excel("GSE111543.xlsx", sheet = "logcounts")
logcounts_matrix <- read_excel("./week 2/GSE111543.xlsx", sheet = "logcounts")
dim(logcounts_matrix)
logcounts_matrix <- read_excel("./week 2/GSE111543.xlsx", sheet = "logcounts")
dim(logcounts_matrix)
(logcounts_matrix) <- as.data.frame(logcounts_matrix)
logcounts_matrix <- read_excel("./week 2/GSE111543.xlsx", sheet = "logcounts")
dim(logcounts_matrix)
logcounts_matrix <- as.data.frame(logcounts_matrix)
logcounts_matrix <- column_to_rownames(logcounts_matrix, var = "gene")
logcounts_matrix <- as.matrix(logcounts_matrix)
logcounts_matrix
cell_info <- read_excel(   )
##cell_info <- read_excel(   )
# all(rownames(cell_info$Sample) == colnames(logcounts_matrix))
head(cell_info)
##cell_info <- read_excel(   )
# all(rownames(cell_info$Sample) == colnames(logcounts_matrix))
##head(cell_info)
cell_info <- read_excel("GSE111543.xlsx", sheet = "cell_info")
##cell_info <- read_excel(   )
# all(rownames(cell_info$Sample) == colnames(logcounts_matrix))
##head(cell_info)
cell_info <- read_excel("./week 2/GSE111543.xlsx", sheet = "cell_info")
# all(rownames(cell_info$Sample) == colnames(logcounts_matrix))
head(cell_info)
gene_index <- 1
names_infected <- cell_info$Sample[cell_info$Infection == "STM-LT2"]
gene_1_infected <- logcounts_matrix[gene_index,names_infected]
names_un_infected <- cell_info$Sample[cell_info$Infection != "STM-LT2"]
gene_1_uninfected <- logcounts_matrix[gene_index,names_un_infected]
out <- t.test(gene_1_infected, gene_1_uninfected)
out$p.value
##t_test_row <- function(index, matrix, metadata) {
gene_index <- 2
t_test_row <- function(index, matrix, metadata) {
names_infected <- metadata$Sample[metadata$Infection == "STM-LT2"]
gene_1_infected <- matrix[index,names_infected]
names_un_infected <- metadata$Sample[metadata$Infection != "STM-LT2"]
gene_1_uninfected <- matrix[index,names_un_infected]
out <- t.test(gene_1_infected, gene_1_uninfected)
return(out$p.value)
}
t_test_row(index = 2, logcounts_matrix, cell_info)
t_test_pvalues <- vapply(  X = 1:nrow(logcounts_matrix)   ,  FUN = t_test_row,  FUN.VALUE =  0,  matrix = logcounts_matrix,  metadata = cell_info
head(t_test_pvalues, n=10)
t_test_pvalues <- vapply(  X = 1:nrow(logcounts_matrix)   ,  FUN = t_test_row,  FUN.VALUE =  0,  matrix = logcounts_matrix,  metadata = cell_info)
head(t_test_pvalues, n=10)
hist(t_test_pvalues, breaks = 50)
result_bh <- p.adjust(t_test_pvalues,method = "BH")
hist(result_bh)
head(t_test_pvalues)
